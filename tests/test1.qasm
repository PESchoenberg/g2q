// test1.qasm;
// Compiled with g2q - v1.2.9;
OPENQASM 2.0;
include "qelib1.inc";
qreg q[5];
creg c[5];
h q[0];
x q[1];
y q[2];
z q[0];
s q[1];
t q[2];
sdg q[0];
tdg q[1];
reset q[0];
// Begin swap;
cx q[1],q[2];
cx q[2],q[1];
cx q[1],q[2];
// End swap;
swap q[0],q[1];
cx q[2],q[0];
// Begin cy;
sdg q[1];
cx q[0],q[1];
s q[1];
// End cy;
cy q[2],q[0];
// Begin cz;
h q[1];
cx q[0],q[1];
h q[1];
// End cz;
cz q[2],q[0];
// Begin ch;
h q[1];
sdg q[1];
cx q[0],q[1];
// Begin ht;
h q[1];
t q[1];
// End ht;
cx q[0],q[1];
t q[1];
// Begin hs;
h q[1];
s q[1];
// End hs;
x q[1];
s q[0];
// End ch;
ch q[2],q[0];
// Begin cswap;
cx q[2],q[1];
cx q[0],q[1];
h q[2];
t q[0];
tdg q[1];
t q[2];
cx q[2],q[1];
cx q[0],q[2];
t q[1];
tdg q[2];
cx q[0],q[1];
tdg q[1];
cx q[0],q[2];
cx q[2],q[1];
t q[1];
h q[2];
cx q[2],q[1];
// End cswap;
u1(1.6) q[0];
u2(1.6,1.6) q[1];
u3(1.6,1.6,1.6) q[2];
// Begin cu1;
u1(0.8) q[2];
cx q[2],q[0];
u1(-0.8) q[0];
cx q[2],q[0];
u1(0.8) q[2];
// End cu1;
cu1(1.6) q[2],q[1];
// Begin cu3;
u1(0.0) q[2];
cx q[2],q[2];
u3(-0.8,0,-1.6) q[2];
cx q[2],q[2];
u3(0.8,1.6,0) q[2];
// End cu3;
cu3(1.6,1.6,1.6) q[2],q[0];
// Begin ccx;
h q[2];
cx q[1],q[2];
tdg q[2];
cx q[0],q[2];
t q[2];
cx q[1],q[2];
tdg q[2];
cx q[0],q[2];
t q[1];
t q[2];
h q[2];
cx q[0],q[1];
t q[0];
tdg q[1];
cx q[0],q[1];
// End ccx;
ccx q[0],q[1],q[2];
u3(1.6,-1.5707963267948966,1.5707963267948966) q[1];
rx(1.5707963267948966) q[1];
u3(1.6,0,0) q[2];
ry(1.5707963267948966) q[2];
u1(1.6) q[3];
rz(1.5707963267948966) q[0];
// Begin crz;
u1(0.8) q[2];
cx q[1],q[2];
u1(-0.8) q[2];
cx q[1],q[2];
// End crz;
crz(1.5707963267948966) q[0],q[1];
if(q==1) y q[2];
if(q[2]!=1) y q[2];
// Begin qftyn;
h q[0];
// Begin cu1;
u1(0.7853981633974483) q[1];
cx q[1],q[0];
u1(-0.7853981633974483) q[0];
cx q[1],q[0];
u1(0.7853981633974483) q[1];
// End cu1;
// Begin cu1;
u1(0.39269908169872414) q[2];
cx q[2],q[0];
u1(-0.39269908169872414) q[0];
cx q[2],q[0];
u1(0.39269908169872414) q[2];
// End cu1;
h q[1];
// Begin cu1;
u1(0.7853981633974483) q[2];
cx q[2],q[1];
u1(-0.7853981633974483) q[1];
cx q[2],q[1];
u1(0.7853981633974483) q[2];
// End cu1;
h q[2];
// End qftyn;
// Begin qftdgyn;
// Begin cu1;
u1(0.7853981633974483) q[1];
cx q[1],q[0];
u1(-0.7853981633974483) q[0];
cx q[1],q[0];
u1(0.7853981633974483) q[1];
// End cu1;
// Begin cu1;
u1(1.5707963267948966) q[1];
cx q[1],q[1];
u1(-1.5707963267948966) q[1];
cx q[1],q[1];
u1(1.5707963267948966) q[1];
// End cu1;
h q[1];
h q[0];
h q[0];
// End qftdgyn;
// Begin ecc1;
// Begin g1y;
h q[0];
h q[1];
h q[2];
// End g1y;
t q[1];
// Begin g1x;
h q[1];
h q[1];
// End g1x;
cx q[0],q[1];
h q[0];
cx q[2],q[1];
// Begin g1y;
h q[1];
h q[2];
// End g1y;
// End ecc1;
// Begin ecc2;
// Begin g1y;
h q[0];
h q[1];
h q[2];
// End g1y;
h q[1];
cx q[0],q[1];
h q[0];
cx q[2],q[1];
x q[0];
// Begin g1y;
h q[1];
h q[2];
// End g1y;
// Begin g1y;
x q[0];
x q[1];
x q[2];
// End g1y;
// Begin g1y;
x q[0];
x q[1];
x q[2];
// End g1y;
h q[0];
// Begin g1y;
x q[1];
x q[2];
// End g1y;
// Begin g1y;
h q[1];
h q[2];
// End g1y;
cx q[2],q[1];
cx q[0],q[1];
h q[2];
h q[0];
cx q[2],q[1];
tdg q[1];
cx q[0],q[1];
t q[1];
cx q[2],q[1];
tdg q[1];
cx q[0],q[1];
t q[1];
h q[1];
h q[1];
// End ecc2;
// Begin ecc3;
// Begin g1y;
h q[0];
h q[1];
h q[2];
h q[3];
h q[4];
// End g1y;
t q[2];
// Begin g1x;
h q[2];
h q[2];
// End g1x;
cx q[1],q[2];
cx q[0],q[2];
// Begin g1y;
h q[0];
h q[1];
// End g1y;
cx q[3],q[2];
// Begin g1y;
h q[2];
h q[3];
// End g1y;
cx q[3],q[2];
cx q[0],q[2];
cx q[1],q[2];
h q[2];
cx q[4],q[2];
h q[2];
h q[4];
cx q[4],q[2];
cx q[1],q[2];
cx q[3],q[2];
// End ecc3;
// Begin hx;
h q[0];
x q[0];
// End hx;
// Begin hy;
h q[0];
y q[0];
// End hy;
// Begin hz;
h q[0];
z q[0];
// End hz;
// Begin hs;
h q[0];
s q[0];
// End hs;
// Begin hsdg;
h q[0];
sdg q[0];
// End hsdg;
// Begin ht;
h q[0];
t q[0];
// End ht;
// Begin htdg;
h q[0];
tdg q[0];
// End htdg;
// Begin qrand1;
// Begin g1y;
h q[0];
h q[1];
h q[2];
h q[3];
// End g1y;
// Begin cz;
h q[2];
cx q[1],q[2];
h q[2];
// End cz;
// Begin g1y;
t q[1];
t q[2];
// End g1y;
// Begin cz;
h q[1];
cx q[0],q[1];
h q[1];
// End cz;
// Begin cz;
h q[3];
cx q[2],q[3];
h q[3];
// End cz;
t q[0];
y q[1];
x q[2];
t q[3];
// Begin cz;
h q[2];
cx q[1],q[2];
h q[2];
// End cz;
x q[1];
t q[2];
// Begin cz;
h q[1];
cx q[0],q[1];
h q[1];
// End cz;
// End qrand1;
// Begin g1cxg1;
h q[1];
cx q[0],q[1];
h q[1];
// End g1cxg1;
// Begin g1y;
barrier q[0];
barrier q[1];
barrier q[2];
barrier q[3];
barrier q[4];
// End g1y;
// Begin qmeasy;
measure q[0] -> c[0];
measure q[1] -> c[1];
measure q[2] -> c[2];
measure q[3] -> c[3];
measure q[4] -> c[4];
// End qmeasy;
// qdeclare qx-simulator error_model depolarizing_channel,0.001;
// qdeclare qlib-simulator // Hello qlib-simulator;
